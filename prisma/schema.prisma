generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Post {
  id        String  @id @default(cuid())
  title     String
  content   String?
  published Boolean @default(false)
  authorId  String?
  author    User?   @relation(fields: [authorId], references: [id])

  @@map("posts")
}

model Role {
  id    Int     @id @default(autoincrement())
  role  String? @db.VarChar(100)
  users User[]
}

model User {
  id        String   @id @default(cuid())
  name      String?  @map("username") @db.VarChar(100)
  email     String?  @unique @db.VarChar(100)
  password  String?  @unique
  role      Role?    @relation(fields: [roleId], references: [id])
  roleId    Int      @default(3)
  posts     Post[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Product {
  id           String         @id @default(cuid())
  name         String?        @unique @map("product_name") @db.VarChar(200)
  type         String?
  gramPerUnit  Int?
  unitPerPack  Int?
  OrderProduct OrderProduct[]

  @@map("products")
}

model Customer {
  id        String  @id @default(cuid())
  name      String? @unique @map("customer_name") @db.VarChar(200)
  contactWA String? @db.VarChar(200)
  orders    Order[]

  @@map("customers")
}

model Order {
  id          String         @id @default(cuid())
  customer    Customer?      @relation(fields: [customerId], references: [id])
  customerId  String         @default("CUSTOMER_404")
  orderedAt   DateTime       @default(now()) @map("order_date")
  deliveryAt  DateTime?      @default(dbgenerated("NOW() + interval '1 day'"))
  orderlist   OrderProduct[]
  isMade      Boolean        @default(false)
  isDelivered Boolean        @default(false)
  isPaid      Boolean        @default(false)
  updatedAt   DateTime       @updatedAt @map("updated_at")

  @@map("orders")
}

model OrderProduct {
  id        String   @id @default(cuid())
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?
  product   Product? @relation(fields: [productId], references: [id])
  productId String?
  quantity  Int?

  @@map("orderproducts")
}
